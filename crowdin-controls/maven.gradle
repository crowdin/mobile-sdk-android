apply plugin: 'maven-publish'

version = libraryVersion


if (project.hasProperty("android")) { // Android libraries
    task sourcesJar(type: Jar) {
        archiveClassifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        archiveClassifier = 'sources'
        from sourceSets.main.allSource
    }
}

artifacts {
    archives sourcesJar
}

publishing {
    publications {
        Publication(MavenPublication) {
            artifact("$buildDir/outputs/aar/crowdin-controls-release.aar") {
                builtBy(tasks.getByName("assemble"))
            }

            groupId publishedGroupId
            artifactId artifact
            version this.version

            pom {
                name = libraryName
                description = libraryDescription
                url = siteUrl

                packaging = 'aar'
                groupId = publishedGroupId
                artifactId = artifact

                // Set your license
                licenses {
                    license {
                        name = licenseName
                        url = licenseUrl
                    }
                }
                developers {
                    developer {
                        id = developerId
                        name = developerName
                        email = developerEmail
                    }
                }
                scm {
                    connection = gitUrl
                    developerConnection = gitUrl
                    url = siteUrl
                }
            }

            pom.withXml {
                def dependenciesNode = asNode()['dependencies'][0] ?: asNode().appendNode('dependencies')
                // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    // Ensure dependencies such as fileTree are not included.
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}
