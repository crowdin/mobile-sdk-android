"use strict";(self.webpackChunk_crowdin_mobile_sdk_android_website=self.webpackChunk_crowdin_mobile_sdk_android_website||[]).push([[441],{6823:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"guides/screenshots-automation","title":"Screenshots Automation","description":"This guide shows how to automate the process of taking screenshots and uploading them to Crowdin to provide context for translators or AI. It covers the necessary setup, how to use the Crowdin SDK, and a sample automation test.","source":"@site/docs/guides/screenshots-automation.md","sourceDirName":"guides","slug":"/guides/screenshots-automation","permalink":"/mobile-sdk-android/guides/screenshots-automation","draft":false,"unlisted":false,"editUrl":"https://github.com/crowdin/mobile-sdk-android/tree/master/website/docs/guides/screenshots-automation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"SDK Controls","permalink":"/mobile-sdk-android/advanced-features/sdk-controls"},"next":{"title":"Multiple Flavor Apps","permalink":"/mobile-sdk-android/guides/multiple-flavor-app"}}');var o=t(4848),s=t(8453);const r={},a="Screenshots Automation",d={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Setting Up the Crowdin SDK",id:"setting-up-the-crowdin-sdk",level:2},{value:"Key Configuration Options",id:"key-configuration-options",level:3},{value:"Capturing Screenshots with Crowdin SDK",id:"capturing-screenshots-with-crowdin-sdk",level:2},{value:"Example Automation Test",id:"example-automation-test",level:2},{value:"Key Points",id:"key-points",level:3},{value:"Conclusion",id:"conclusion",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"screenshots-automation",children:"Screenshots Automation"})}),"\n",(0,o.jsx)(n.p,{children:"This guide shows how to automate the process of taking screenshots and uploading them to Crowdin to provide context for translators or AI. It covers the necessary setup, how to use the Crowdin SDK, and a sample automation test."}),"\n",(0,o.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,o.jsx)(n.p,{children:"Before you start, ensure the following:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Crowdin SDK Integration:"})," The Crowdin SDK should be integrated into your project (See ",(0,o.jsx)(n.a,{href:"#setting-up-the-crowdin-sdk",children:"Setting Up the Crowdin SDK"}),")."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Android Testing Dependencies:"})," Add the following dependencies to your ",(0,o.jsx)(n.code,{children:"build.gradle"})," file:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-groovy",metastring:'title="build.gradle"',children:'dependencies {\n    androidTestImplementation "androidx.test.ext:junit:1.2.1"\n    androidTestImplementation "androidx.test.espresso:espresso-core:3.6.1"\n    androidTestImplementation "androidx.tracing:tracing:1.2.0"\n    androidTestImplementation "androidx.test.espresso:espresso-contrib:3.6.1"\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"setting-up-the-crowdin-sdk",children:"Setting Up the Crowdin SDK"}),"\n",(0,o.jsx)(n.p,{children:"To use the Crowdin SDK for automation testing, configure it as follows:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Add the Crowdin SDK to Your Dependencies:"})}),"\n",(0,o.jsxs)(n.p,{children:["Add the necessary dependency to your ",(0,o.jsx)(n.code,{children:"build.gradle"})," file:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-groovy",metastring:'title="build.gradle"',children:"implementation 'com.github.crowdin.mobile-sdk-android:sdk:1.11.1'\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Initialize the SDK:"})}),"\n",(0,o.jsxs)(n.p,{children:["Use the following code to initialize the Crowdin SDK, ensuring you include the ",(0,o.jsx)(n.code,{children:"withApiAuthConfig"})," configuration for automation:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-kotlin",metastring:'title="Application.kt"',children:'class MyApplication : Application() {\n    override fun onCreate() {\n        super.onCreate()\n\n        Crowdin.init(\n            this,\n            CrowdinConfig.Builder()\n                .withDistributionHash("your_distribution_hash_here")\n                .withScreenshotEnabled()\n                .withSourceLanguage("source_language_code")\n                .withApiAuthConfig(ApiAuthConfig("your_api_token_here"))\n                .build()\n        )\n    }\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"key-configuration-options",children:"Key Configuration Options"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"withApiAuthConfig(ApiAuthConfig)"})," - Sets up API token-based authentication for automated workflows. This method is essential for CI/CD pipelines and scenarios where user interaction isn't required."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"withDistributionHash(String)"})," - Defines the unique distribution hash from your Crowdin project."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"withScreenshotEnabled()"})," - Activates the Screenshots feature in your application, enabling automatic capture and upload of tagged screenshots."]}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["See the ",(0,o.jsx)(n.a,{href:"/advanced-features/screenshots",children:"Screenshots"})," guide for more information on setting up the Crowdin SDK for screenshots."]})}),"\n",(0,o.jsx)(n.h2,{id:"capturing-screenshots-with-crowdin-sdk",children:"Capturing Screenshots with Crowdin SDK"}),"\n",(0,o.jsxs)(n.p,{children:["Screenshots can be automatically uploaded to Crowdin by calling the ",(0,o.jsx)(n.code,{children:"Crowdin.sendScreenshot()"})," method. This method requires a bitmap image, a screenshot name, and a ",(0,o.jsx)(n.code,{children:"ScreenshotCallback"})," (optional) to handle success or failure."]}),"\n",(0,o.jsx)(n.h2,{id:"example-automation-test",children:"Example Automation Test"}),"\n",(0,o.jsx)(n.p,{children:"The following test navigates through app screens, captures screenshots, and uploads them to Crowdin:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-kotlin",children:'@Test\nfun screenshotCapture() {\n    val splashScenario = ActivityScenario.launch(SplashScreenActivity::class.java)\n\n    waitForActivity<MainActivity>()?.let { activity ->\n        captureAndSendScreenshot(activity, "dashboard")\n\n        onView(withId(R.id.drawerLayout)).perform(DrawerActions.open())\n        onView(withId(R.id.nav_add_task)).perform(click())\n        captureAndSendScreenshot(activity, "add_task")\n\n        onView(withId(R.id.drawerLayout)).perform(DrawerActions.open())\n        onView(withId(R.id.nav_category)).perform(click())\n        captureAndSendScreenshot(activity, "category")\n    } ?: throw IllegalStateException("MainActivity not found!")\n\n    splashScenario.close()\n}\n\nprivate fun captureAndSendScreenshot(activity: Activity, name: String) {\n    val latch = CountDownLatch(1)\n    val rootView = activity.window.decorView.rootView\n    val bitmap = captureBitmap(rootView)\n\n    Crowdin.sendScreenshot(\n        bitmap = bitmap,\n        screenshotName = name,\n        screenshotCallback = object : ScreenshotCallback {\n            override fun onSuccess() {\n                latch.countDown()\n            }\n            override fun onFailure(throwable: Throwable) {\n                throw AssertionError("Screenshot upload failed: ${throwable.message}")\n            }\n        }\n    )\n\n    latch.await(30, TimeUnit.SECONDS)\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"key-points",children:"Key Points"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Bitmap Generation:"})," Screenshots are captured by drawing the root view onto a Canvas."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Crowdin SDK Integration:"})," Use ",(0,o.jsx)(n.code,{children:"Crowdin.sendScreenshot()"})," to upload screenshots with metadata."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Custom View Actions:"})," Handle RecyclerView actions like editing or deleting items using custom ",(0,o.jsx)(n.code,{children:"ViewAction"}),"."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,o.jsxs)(n.p,{children:["This guide demonstrates how to create automation tests that capture and upload screenshots using the Crowdin SDK. More details can be found in the ",(0,o.jsx)(n.a,{href:"https://github.com/crowdin/mobile-sdk-android/blob/master/example/src/androidTest/java/com/crowdin/platform/example/ScreenshotAutomationTest.kt",children:(0,o.jsx)(n.code,{children:"ScreenshotAutomationTest.kt"})})," file of the Crowdin SDK Example project."]}),"\n",(0,o.jsx)(n.p,{children:"As a result, you can provide translators with visual context, ensuring more accurate and contextually appropriate translations."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var i=t(6540);const o={},s=i.createContext(o);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);